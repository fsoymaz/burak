version: "3"

services:
  db:
    image: postgres:alpine
    container_name: db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - .env:/code/.env
    networks:
      webnet:
        ipv4_address: 192.168.32.2

  auth:
    build: ./auth
    container_name: auth_service
    ports:
      - "8001:8000" # Dış port 8001, iç port 8000
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - code:/code
      - ./auth:/code/auth
      - qrdata:/qrdata
      - .env:/code/.env
    depends_on:
      - db
    networks:
      webnet:
        ipv4_address: 192.168.32.3


  front:
    build: ./front
    container_name: frontend_service
    ports:
      - "3000:80"
    depends_on:
      - auth
    volumes:
      - ./front:/usr/share/nginx/html
      - qrdata:/usr/share/nginx/html/qrdata
    networks:
      webnet:
        ipv4_address: 192.168.32.5

  nginx:
    build: ./nginx
    container_name: nginx_server
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/localhost.key:/etc/ssl/private/localhost.key
      - ./nginx/localhost.pem:/etc/ssl/certs/localhost.pem
      - ./nginx/default.conf:/etc/nginx/nginx.conf
    depends_on:
      - front
      - auth
      - game
    networks:
      webnet:
        ipv4_address: 192.168.32.6

  redis:
    image: redis:alpine
    container_name: redis_server
    ports:
      - "6379:6379"
    networks:
      webnet:
        ipv4_address: 192.168.32.7

  game:
    build: ./pingpong
    container_name: game_service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=${DATABASE_URL}
    volumes:
      - ./pingpong:/code/pingpong
      - .env:/code/.env
    depends_on:
      - db
    networks:
      webnet:
        ipv4_address: 192.168.32.8

volumes:
  postgres_data:
  qrdata:
  code:

networks:
  webnet:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.32.0/24